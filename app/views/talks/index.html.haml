.row
  .col-md-12
    .box
      .box-header.with-border
        %h4.box-title
          = @event.name
        %span.pull-right
          = link_to edit_user_event_path(current_user, @event), class: 'btn btn-sm btn-primary' do
            %i.fa.fa-pencil
            Edit
          = link_to new_event_talk_path(@event), class: 'btn btn-sm btn-primary' do
            %i.fa.fa-plus
            Add Talk
      .event_banner{:style => "background: url(#{@event.image});background-size: cover;background-repeat: no-repeat;background-position: center;position: relative;"}
      .box-body
        %p
          = @event.description.present? ? @event.description : "We don't have much to describe this event as of now."

    %ul.timeline
      %li.time-label
        %span.bg-green
          %i.fa.fa-hourglass-start
          = @event.starts_at.localtime.strftime('%d %b. %Y')

      - i = 0
      - @event.talks.group_by{|x| x.starts_at.strftime('%Y-%m-%d')}.sort.map do |date, talks|
        %li.time-label
          %span.bg-light-blue-active
            %i.fa.fa-hourglass-start
            = talks.first.starts_at.localtime.strftime('%d %b. %Y')
        - talks.each do |talk|
          %li{:class => ('timeline-inverted' if (i+1)%2 == 0)}
            - i = i+1
            .timeline-badge{:class => timeline_class(talk)}
              %i{:class => timeline_icon_class(talk)}
            .timeline-panel
              .timeline-heading
                %h2.timeline-title
                  = talk.topic
                %p
                  %small.text-muted
                    = "#{talk.duration}m"
                    %i.glyphicon.glyphicon-time
                    = talk.starts_at.localtime.strftime('%l:%M%P')

                -#.timeline-presenter
                  - talk.presenters.each do |presenter|
                    = image_tag(gravatar(presenter.email, 30), :class => 'img-circle')
              - if talk.yet_to_start?
                %hr
                Starting in
                .count_down_timer{'data-date' => "#{talk.starts_at.localtime.strftime('%Y-%m-%d %H:%M:%S')}"}
                %hr
              - elsif talk.started?
                %hr
                Remaining showtime
                .count_down_timer{'data-date' => "#{talk.ends_at.strftime('%Y-%m-%d %H:%M:%S')}"}
                %hr

              .timeline-body
                %p
                  = truncate(talk.details, length: 200, omission: '... (get in to explore more)')
              -#- if talk.ratings.present?
                %br
                .talk_chart
                  = high_chart("talk_graph_#{talk.id}", talk.ended? ? talk_analysis_graph(talk) : talk_graph(talk))
      %li.time-label
        %span.bg-red
          %i.fa.fa-hourglass-start
          = @event.ends_at.strftime('%d %b. %Y')
